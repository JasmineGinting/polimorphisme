package polimorphisme;

public class Prak_1 {

    public int x1, y1, x2, y2;

    public Prak_1(int x1, int y1, int x2, int y2) {
        this.x1 = x1;
        this.x2 = x2;
        this.y1 = y1;
        this.y2 = y2;
    }

    public Prak_1(int width, int height) {
        this(0, 0, width, height);
    }

    public Prak_1() {
        this(0, 0, 0, 0);
    }

    public void move(int deltax, int deltay) {
        x1 += deltax;
        x2 += deltax;
        y1 += deltay;
        y2 += deltay;
    }

    public boolean isInside(int x, int y) {
        return ((x >= x1) && (x <= x2) && (y >= y1) && (y <= y2));
    }

    public Prak_1 union(Prak_1 r) {
        return new Prak_1((this.x1 < r.x1) ? this.x1 : r.x1,
                (this.y1 < r.y1) ? this.y1 : r.y1,
                (this.x2 > r.x2) ? this.x2 : r.x2,
                (this.y2 > r.y2) ? this.y2 : r.y2);
    }

    public Prak_1 intersection(Prak_1 r) {
        Prak_1 result = new Prak_1(
                (this.x1 > r.x1) ? this.x1 : r.x1,
                (this.y1 > r.y1) ? this.y1 : r.y1,
                (this.x2 < r.x2) ? this.x2 : r.x2,
                (this.y2 < r.y2) ? this.y2 : r.y2);
        if (result.x1 > result.x2) {
            result.x1 = result.x2 = 0;
        }
        if (result.y1 > result.y2) {
            result.y1 = result.y2 = 0;
        }
        return result;
    }
}

====== UJI PRAKTIKUM 1 ======

package polimorphisme;

public class Uji_Prak1 {

    public static void main(String[] args) {
        Prak_1 obj = new Prak_1(2, 2);
        obj.move(2, 1);
        obj.isInside(2, 2);
        obj.intersection(obj);
        System.out.println(obj);
    }
    
}
